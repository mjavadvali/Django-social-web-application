services:

  db:
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432

  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
  
  backend:
    container_name: dj-backend
    build: 
      context: .
      dockerfile: ./config/django/Dockerfile
    volumes:
      - ./django_social:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c "python manage.py migrate --no-input --settings=config.settings.prod && \
                    python manage.py collectstatic --no-input --settings=config.settings.prod && \
                    gunicorn config.wsgi:application --bind 0.0.0.0:8000 --reload"
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    depends_on:
      - cache

  nginx:
    image: nginx:1.23.1
    container_name: nginx6
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      # - ./django_social/static:/usr/src/app/static
      - ./django_social/staticfiles:/usr/src/app/staticfiles
      - ./django_social/media:/usr/src/app/media
      - .:/usr/src/app
  
  daphne:
    container_name: daphne
    working_dir: /usr/src/app
    build: 
      context: .
      dockerfile: ./config/django/Dockerfile
    volumes:
      - ./django_social:/usr/src/app
    command: daphne config.asgi:application -b 0.0.0.0 -p 9000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - cache
      - db  
    expose:
      - "9000"