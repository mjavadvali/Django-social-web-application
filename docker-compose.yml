services:

  # cache:
  #   image: redis:7.0.4
  #   restart: always
  #   volumes:
  #     - ./data/cache:/data

  # db:
  #   image: postgres:14.5
  #   restart: always
  #   volumes:
  #     - ./data/db:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_DB=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres

  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--",
              "uwsgi", "--ini", "./usr/src/app/dev/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/usr/src/app

    environment:
      - DJANGO_SETTINGS_MODULE=django_social.config.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - cache

  # daphne:
  #   build: 
  #     context: .
  #     dockerfile: ./dev/django/Dockerfile
  #   working_dir: /usr/src/app
  #   command: ["./wait-for-it.sh", "db:5432", "--",
  #             "daphne", "-u", "./usr/src/app/daphne.sock",
  #             "config.asgi:application"]
  #   restart: always
  #   volumes:
  #     - .:/usr/src/app
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=config.settings.prod
  #     - POSTGRES_DB=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   depends_on:
  #     - db
  #     - cache

  # nginx:
  #   image: nginx:1.23.1
  #   restart: always
  #   volumes:
  #     - ./dev/nginx:/etc/nginx/templates
  #     - .:/usr/src/app
  #   ports:
  #     - "80:80"
  #     - "443:443"
